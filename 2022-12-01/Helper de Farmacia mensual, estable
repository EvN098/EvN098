using ClosedXML.Excel;
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Text;

namespace AlertaFarmacia
{
    class Helper
    {


        public void ExportDataSet(DataSet ds, string destination, string[] SheetsArray =  null )
        {
            var workbook = new XLWorkbook();
            //agregando hojas por cada tabla en el dataset
            workbook.Worksheets.Add(ds);
            //workbook.Worksheets.Add();

            //Inicialimos array si no existe
            SheetsArray ??= new string[0];
                        
            //iterando hojas del excel
            for (int i = 1; i <= workbook.Worksheets.Count(); i++)
            {
                //Quitando formato por defecto del closedxml
                workbook.Worksheet(i).Tables.FirstOrDefault().Theme = XLTableTheme.None;
                
                //Renombrando hojas de excel
                if (SheetsArray.Length == workbook.Worksheets.Count())
                {
                    workbook.Worksheet(i).Name = SheetsArray[i - 1];
                }

                //Agregando todos los bordes a las celdas
                //workbook.Worksheet(i).RangeUsed().Style.Border.TopBorder = XLBorderStyleValues.Thin;
                //workbook.Worksheet(i).RangeUsed().Style.Border.InsideBorder = XLBorderStyleValues.Dotted;
                //workbook.Worksheet(i).RangeUsed().Style.Border.OutsideBorder = XLBorderStyleValues.Thin;
                //workbook.Worksheet(i).RangeUsed().Style.Border.LeftBorder = XLBorderStyleValues.Thin;
                //workbook.Worksheet(i).RangeUsed().Style.Border.RightBorder = XLBorderStyleValues.Thin;
                //workbook.Worksheet(i).RangeUsed().Style.Border.TopBorder = XLBorderStyleValues.Thin;

                //Agregando alineacion y ancho 
                workbook.Worksheet(i).Row(1).Style.Alignment.WrapText = true;
                workbook.Worksheet(i).Row(1).Style.Alignment.Horizontal = XLAlignmentHorizontalValues.Center; //Alineamos horizontalmente
                workbook.Worksheet(i).Row(1).Style.Alignment.Vertical = XLAlignmentVerticalValues.Center;  //Alineamos verticalmente
                workbook.Worksheet(i).Row(1).Style.Font.Bold = true;
                //workbook.Worksheet(i).Columns().AdjustToContents();

                //Buscando rango de celdas usadas
                var ws = workbook.Worksheet(i);
                var range = ws.RangeUsed();

                //Buscando valor de columna "FechaProbableAlta" que es la ultima columna de las hojas de excel
                //var rangoUltimaColumna = range.FindColumn(c => c.FirstCell().Value.ToString().Contains("Servicio"));
                var rangoUltimaColumna = 23;
                if (rangoUltimaColumna != null)
                {
                    //Obtenemos el numero de la columna
                    //var columnaNumero = rangoUltimaColumna.WorksheetColumn().ColumnNumber();
                    var columnaNumero = rangoUltimaColumna;
                    workbook.Worksheet(i).Range(1, 1, 1, columnaNumero).Style.Fill.SetBackgroundColor(XLColor.FromArgb(180, 198, 231));

                    //Iteramos para cada columna con celdas para asignar formato especificando columna
                    for (int k = 1; k <= columnaNumero; k++)
                    {
                        if (workbook.Worksheet(i).Column(k).FirstCell().Value.ToString().Contains("Fecha"))
                        {
                            var Rango1 = workbook.Worksheet(i).RangeUsed();
                                
                            //Obtenemos el rango de filas 
                            var NumFilas = Rango1.RowCount();
                            workbook.Worksheet(i).Column(k).AdjustToContents();

                            //Con el rango de filas sacamos el rango para pintar la columna
                            //workbook.Worksheet(i).Range(2,k,NumFilas,k ).Style.Fill.SetBackgroundColor(XLColor.FromArgb(239, 251, 241));
                            //workbook.Worksheet(i).Column(k).CellsUsed();
                            workbook.Worksheet(i).Column(k).Width = 20;
                        }
                    }
                }
                //workbook.Worksheet(i).Columns().Width = 25;
            }
                      
            workbook.SaveAs(destination);
            workbook.Dispose();
        }

        public void ExportDataTable(DataTable dt, string destination, string[] SheetsArray = null)
        {
            var workbook = new XLWorkbook();
            //agregando hojas por cada tabla en el dataset
            var ws  = workbook.Worksheets.Add();
            
            workbook.Worksheet(1).Row(1).Style.Alignment.WrapText = true;
            workbook.Worksheet(1).Row(1).Style.Alignment.Horizontal = XLAlignmentHorizontalValues.Center; //Alineamos horizontalmente
            workbook.Worksheet(1).Row(1).Style.Alignment.Vertical = XLAlignmentVerticalValues.Center;  //Alineamos verticalmente
            workbook.Worksheet(1).Row(1).Style.Font.Bold = true;
            //ws.Columns().AdjustToContents();
            //ws.Row(2).AdjustToContents();

  
            ws.Cell(1, 1).InsertTable(dt);
            workbook.Worksheet(1).Tables.FirstOrDefault().Theme = XLTableTheme.None;
            ws.SetAutoFilter(false);
            int columnaNumero = ws.Columns().Count();

            workbook.Worksheet(1).Range(1, 1, 1, columnaNumero).Style.Fill.SetBackgroundColor(XLColor.FromArgb(200, 214, 213));
            workbook.Worksheet(1).Columns().Width = 15;

            //Iteramos para cada columna con celdas para asignar formato especificando columna
            for (int k = 1; k <= columnaNumero; k++)
            {
                if (workbook.Worksheet(1).Column(k).FirstCell().Value.ToString().Contains("Servicio"))
                {
                    var Rango1 = workbook.Worksheet(1).RangeUsed();

                    //Obtenemos el rango de filas 
                    var NumFilas = Rango1.RowCount();
                    //workbook.Worksheet(1).Column(k).AdjustToContents();

                    //Con el rango de filas sacamos el rango para pintar la columna
                    //workbook.Worksheet(i).Range(2,k,NumFilas,k ).Style.Fill.SetBackgroundColor(XLColor.FromArgb(239, 251, 241));
                    //workbook.Worksheet(i).Column(k).CellsUsed();
                    workbook.Worksheet(1).Column(k).Width = 40;
                }

                if (workbook.Worksheet(1).Column(k).FirstCell().Value.ToString().Contains("Descripcion"))
                {
                    workbook.Worksheet(1).Column(k).Width = 40;
                }

                if (workbook.Worksheet(1).Column(k).FirstCell().Value.ToString().Contains("Usuario"))
                {                   
                    workbook.Worksheet(1).Column(k).Width = 40;
                }


                if (workbook.Worksheet(1).Column(k).FirstCell().Value.ToString().Contains("Paciente"))
                {
                    workbook.Worksheet(1).Column(k).Width = 40;
                }

                if (workbook.Worksheet(1).Column(k).FirstCell().Value.ToString().Contains("Nombre"))
                {
                    workbook.Worksheet(1).Column(k).Width = 40;
                }


                if (workbook.Worksheet(1).Column(k).FirstCell().Value.ToString().Contains("Fecha"))
                {
                    workbook.Worksheet(1).Column(k).Width = 20;
                }
            }

            workbook.SaveAs(destination);
            workbook.Dispose();

            //Inicialimos array si no existe
            SheetsArray ??= new string[0];

        }
    }
}
